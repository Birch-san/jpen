<?xml version="1.0" ?>
<project name="jpen" default="help" basedir=".">
	<target name="help">
<echo>JPen
</echo>
	</target>
	
	
	<!--
	****************************************************
	* BEGIN PROPERTIES 
	****************************************************
	-->
	
	<property 	name  ="src-installer" 			
				value ="src/installer" />
	
	<property 	name  ="dist" 			
				value ="dist" />
	
	<property 	name  ="dist-temp" 
				value ="dist/temp" />
	
	<property 	name  ="src-java-orig"
				value ="src/java" />
	
	<property 	name  ="src-java"
				value ="dist/src/java" />
	
	<property 	name  ="src-resources"
				value ="src/resources" />
	
	
	
	
	<path id="core-cp">
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<path id="compile-cp">
		<path refid="core-cp"/>
	</path>
	<property name="compile-cp-prop" refid="compile-cp"/>
	

	<!--
	****************************************************
	* END PROPERTIES
	****************************************************
	-->
	
	
	<taskdef name="izpack" classname="com.izforge.izpack.ant.IzPackTask"/>
	
	
	<!--
	****************************************************
	* BEGIN BUILD 
	****************************************************
	-->
	
	<target name="clean">
		<delete dir="${dist}"/>
		<delete dir="${dist-temp}"/>
	</target>
	
	<!-- Ensures the dist-temp and dist directories are created -->
	<target name="init-dirs">
		<mkdir dir="${dist}"/>
		<mkdir dir="${dist-temp}"/>
		<mkdir dir="${src-java}"/>
		
		<copy todir="${src-java}">
			<fileset dir="${src-java-orig}">
				<include name="**/*"/>
			</fileset>
		</copy>
		
		<loadfile 	srcFile="${dist-temp}/dist_name"
					property="dist_name" />
		<loadfile 	srcFile="${dist-temp}/revision"
					property="dist_version" />
		
		<replace file="${src-java}/jpen/provider/Utils.java" 
			token="${VERSION}"
			value="${dist_version}"/>
		<replace file="${src-java}/jpen/provider/Utils.java" 
			token="${DIST_NAME}"
			value="${dist_name}"/>
		
		<replace dir="${src-java}" token="package jpen" value="package jpen.r${dist_version}">
			<include name="**/*.java"/>
		</replace>
		<replace dir="${src-java}" token="import jpen" value="import jpen.r${dist_version}">
			<include name="**/*.java"/>
		</replace>
		<replace dir="${src-java}" token="import static jpen" value="import static jpen.r${dist_version}">
			<include name="**/*.java"/>
		</replace>
		
		<mkdir dir="${src-java}/jpen/r${dist_version}"/>
		
		<move todir="${src-java}/jpen/r${dist_version}">
			<fileset dir="${src-java}/jpen">
				<include name="**/*"/>
				<exclude name="r${dist_version}"/>
			</fileset>
		</move>
		
	</target>
	
	<target name="copy-all">
		<copy todir="${dist-temp}">
			<fileset dir="${src-java}">
				<exclude name="**/*.java"/>
				<exclude name="**/*.lnk"/>
			</fileset>
			<fileset dir="${src-resources}">
				<exclude name="**/*.java"/>
				<exclude name="**/*.lnk"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile">
		<!--<echo message="${compile-cp-prop}"/>-->
		<javac srcdir="${src-java}" destdir="${dist-temp}" classpathref="compile-cp" source="1.5" target="1.5"/>
	</target>
	
	<target name="dist" depends="init-dirs, copy-all, compile">
		<loadfile 	srcFile="${dist-temp}/dist_name"
					property="dist_name" />
		<loadfile 	srcFile="${dist-temp}/revision"
					property="dist_version" />
		
		<copy file="manifest.template" tofile="${dist}/manifest"/>
		<replace file="${dist}/manifest" 
			token="${VERSION}"
			value="${dist_version}"/>
		<replace file="${dist}/manifest" 
			token="${DIST_NAME}"
			value="${dist_name}"/>
		
		<jar basedir="${dist-temp}" destfile="${dist}/${dist_name}.jar"
			manifest="${dist}/manifest" 
			compress="true" level="9">
		</jar>
		<delete file="${dist}/manifest"/>
		<!--<delete dir="${dist-temp}"/>-->
		<input message="Keystore password:" addproperty="store_pass"/>
		<input message="JPEN key password:" addproperty="key_pass"/>
		<signjar jar="${dist}/${dist_name}.jar" alias="jpen" 
			keypass="${key_pass}" storepass="${store_pass}"/> 
		
	</target>
	
	<target name="so_hack">
		<loadfile 	srcFile="${dist-temp}/dist_name"
					property="dist_name" />
		
		<copy file="prepackaged_hack/libjpen-2.so"
			tofile="${dist}/lib${dist_name}.so"/>
		<copy file="prepackaged_hack/jpen-2.jnilib"
				tofile="${dist}/${dist_name}.jnilib"/>
	</target>
	
	<target name="installer">
		<loadfile 	srcFile="${dist-temp}/dist_name"
					property="dist_name" />
		<loadfile 	srcFile="${dist-temp}/revision"
					property="dist_version" />
		
		
		<available file="${dist}/${dist_name}.jar" property="jar_exists"/>
		<fail unless="jar_exists" message="JAR does not exist!"/>
		<available file="${dist}/${dist_name}.dll" property="dll_exists"/>
		<fail unless="dll_exists" message="DLL does not exist!"/>
		<available file="${dist}/lib${dist_name}.so" property="so_exists"/>
		<fail unless="so_exists" message="SO does not exist!"/>
		<available file="${dist}/${dist_name}.jnilib" property="jnilib_exists"/>
			<fail unless="jnilib_exists" message="JNILIB does not exist!"/>
		
		<mkdir dir="${dist-temp}/installer"/>
		
		<copy file="${dist}/${dist_name}.jar" todir="${dist-temp}/installer"/>
		<copy file="${dist}/${dist_name}.dll" todir="${dist-temp}/installer"/>
		<copy file="${dist}/lib${dist_name}.so" todir="${dist-temp}/installer"/>
		<copy file="${dist}/${dist_name}.jnilib" todir="${dist-temp}/installer"/>
		
		<copy file="${src-installer}/installer.template.xml" tofile="${dist-temp}/installer/installer.xml"/>
		<copy file="${src-installer}/readme.template.txt" tofile="${dist-temp}/installer/readme.txt"/>
		
		<replace file="${dist-temp}/installer/installer.xml" 
			token="${VERSION}"
			value="${dist_version}"/>
		<replace file="${dist-temp}/installer/installer.xml" 
			token="${DIST_NAME}"
			value="${dist_name}"/>
		
		<replace file="${dist-temp}/installer/readme.txt" 
			token="${VERSION}"
			value="${dist_version}"/>
		<replace file="${dist-temp}/installer/readme.txt" 
			token="${DIST_NAME}"
			value="${dist_name}"/>
		
		<izpack input="${dist-temp}/installer/installer.xml"
		        output="${dist}/${dist_name}_installer.jar"
		        installerType="standard"
		        basedir="${dist-temp}/installer" />
		<!-- Add extension information to the installer -->
		<jar update="yes" destfile="${dist}/${dist_name}_installer.jar">
			<manifest>
			<attribute name="Extension-Name" value="jpen_${dist_version}"/>
			<attribute name="Specification-Vendor" value="jpen_${dist_version}"/>
			<attribute name="Specification-Version" value="${dist_version}"/>
			<attribute name="Implementation-Vendor-Id" value="jpen_${dist_version}"/>
			<attribute name="Implementation-Vendor" value="jpen_${dist_version}"/>
			<attribute name="Implementation-Version" value="${dist_version}"/>
			</manifest>
		</jar>
		
		<input message="Keystore password:" addproperty="store_pass"/>
		<input message="JPEN key password:" addproperty="key_pass"/>
		<signjar jar="${dist}/${dist_name}_installer.jar" alias="jpen" 
			keypass="${key_pass}" storepass="${store_pass}"/> 
	</target>

	<target name="replace-c-packages">
		<loadfile 	srcFile="${dist-temp}/dist_name"
					property="dist_name" />
		<loadfile 	srcFile="${dist-temp}/revision"
					property="dist_version" />
		
		<replace dir="dist/temp/c" token="Java_jpen_" value="Java_jpen_r${dist_version}_">
			<include name="**/*.c"/>
			<include name="**/*.h"/>
			<include name="**/*.m"/>
		</replace>
	</target>
	
	<!--
	****************************************************
	* END BUILD 
	****************************************************
	-->
	
</project>
